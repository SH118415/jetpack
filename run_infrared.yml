---
- hosts: undercloud
  tasks:
      - name: Ensure SELinux is set to enforcing mode
        selinux:
            policy: targeted
            state: enforcing
      - name: reboot the undercloud
        shell: "sleep 2 && reboot"
        async: 1
        poll: 0
        ignore_errors: true
      - name: wait for undercloud to go down
        command: "{{ ping -c1 hostvars['localhost']['undercloud_hostname'] }}"
        register: node_down
        until: node_down.rc != 0
        retries: 100
        delay: 3
        ignore_errors: true
        delegate_to: localhost
      - name: wait for 180 seconds before checking for undercloud
        wait_for:
            delay: 180
            timeout: 0
        delegate_to: localhost
      - name: waiting for the undercloud to be available
        wait_for:
            port: 22
            host: "{{ hostvars['localhost']['undercloud_hostname'] }}"
            search_regex: OpenSSH
            timeout: 30
        register: uc_reachable
        delegate_to: localhost
        retries: 100
        until: uc_reachable|succeeded
      - name: check selinux enforcement
        shell: getenforce


- hosts: localhost
  tasks:
      - name: set compute_count
        set_fact:
            compute_count: "{{ json_file.nodes|length - (controller_count|int + 1) }}"
        when: compute_count is not defined
      - name: run tripleo-undercloud
        shell: |
            cd {{ infrared_dir }}
            source {{ infrared_dir }}/.venv/bin/activate
            infrared tripleo-undercloud -vv --version {{ osp_release }} --images-task rpm --config-options DEFAULT.local_interface={{ ctlplane_interface }} &> undercloud_install.log
        args:
            chdir: "{{ infrared_dir }}" 
      - name: run tripleo-overcloud
        shell: |
            source .venv/bin/activate
            infrared tripleo-overcloud -vvv --version {{ osp_release }} --instackenv-file {{ undercloud_instackenv_path }} --deployment-files {{ nic_configs }} --controller-nodes {{ controller_count }} --compute-nodes {{ compute_count }} --network-protocol ipv4 --network-backend vlan --public-network false --introspect yes --tagging yes --deploy yes &> overcloud_install.log
        args:
            chdir: "{{ infrared_dir }}" 
