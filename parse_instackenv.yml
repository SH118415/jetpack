- hosts: localhost
  vars:
    alias_lab: "http://quads.alias.bos.scalelab.redhat.com"
    scale_lab: "http://quads.rdu2.scalelab.redhat.com"
  tasks:
      - name: clone infrared
        git:
            repo: "https://github.com/redhat-openstack/infrared"
            dest: "{{ infrared_dir }}"
      - name: set workspace name
        set_fact:
            workspace_name: "{{ 'workspace_' + ansible_date_time.date + '_' + ansible_date_time.time|string|replace(':','-')}}"
      - name: Add all plugins
        shell: |
            cd {{ infrared_dir }}
            git fetch "https://review.gerrithub.io/redhat-openstack/infrared" refs/changes/76/463576/1 && git checkout FETCH_HEAD
            virtualenv .venv && source .venv/bin/activate
            pip install --upgrade pip
            pip install --upgrade setuptools
            pip install .            
            infrared plugin add all
            infrared workspace create {{ workspace_name }}
            infrared workspace checkout {{ workspace_name }}
      - name: set infrared infrared_hosts_dir
        set_fact:
            infrared_hosts_dir: "{{ ansible_user_dir }}/.infrared/.workspaces/active"
      - name: disable selinux
        shell: setenforce 0
      - name: set instackfile
        set_fact:
            instackenv_path: "{{ instackenv_file|default(ansible_user_dir + '/instackenv.json') }}"
      - name: Download instackenv.json
        get_url:
            url: "{{ alias_lab }}/cloud/{{ cloud_name }}_instackenv.json"
            dest: "{{ instackenv_path }}"
            mode: '0440'
        when: (instackenv_file is not defined and lab_type == "alias")
      - name: Download instackenv.json
        get_url:
            url: "{{ scale_lab }}/cloud/{{ cloud_name }}_instackenv.json"
            dest: "{{ instackenv_path }}"
            mode: '0440'
        when: (instackenv_file is not defined and lab_type == "scale")
      - name: read instackenv.json
        set_fact:
            json_file: "{{ lookup('file', '{{ instackenv_path }}') | from_json }}"
      - name: set undercloud pm_addr
        set_fact:
            pm_addr: "{{ json_file.nodes[0].pm_addr }}"
      - name: get host
        set_fact: 
            undercloud_hostname: "{{ pm_addr | replace('mgmt-','') | replace('-drac', '') }}"
        when: undercloud_host is not defined
      - name: add localhost to inventory file
        add_host:
            name: "localhost"
            groups: "local"
            ansible_connection: "local"
      - name: add undercloud_host to inventory file
        add_host:
            name: "undercloud_host"
            groups: "undercloud_host,baremetal,undercloud,tester"
            ansible_host: "{{ undercloud_hostname }}"
            ansible_user: "{{ ansible_ssh_user }}"
            ansible_ssh_private_key_file: "{{ ansible_ssh_key }}"
      - name: generate inventory file
        template:
            dest: "{{ infrared_hosts_dir }}/{{ inventory_file_name }}"
            src: inventory.j2
            force: yes
      - name: update inventory file symlink
        file:
            dest: "{{ infrared_hosts_dir }}/hosts"
            state: link
            src: "{{ inventory_file_name }}"
      - name: copy jump host key to undercloud
        shell: "echo '{{ ansible_ssh_pass }}' | sshpass ssh-copy-id  -o 'StrictHostKeyChecking no' -f {{ ansible_ssh_user }}@{{ undercloud_hostname }}"
